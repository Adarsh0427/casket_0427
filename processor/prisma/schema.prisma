// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String      @id  @default(uuid()) 
  name     String
  email    String   @unique
  password String
  token   String?
  zaps    Zap[]
}

model Zap {
  id   String @id @default(uuid())
  userId String
  triggerId String?
  trigger Trigger? @relation("triggerIdfield")
  actions Action[]
  zapExecutions zapExecution[]  
  User User @relation(fields: [userId], references: [id])

}

model Action {
  id String @id @default(uuid())
  zapId String
  zap Zap @relation(fields: [zapId], references: [id])
  actionId String
  actionType AvailableAction @relation(fields: [actionId], references: [id])
  priority Int @default(0)
}

model AvailableAction {
  id    String @id @default(uuid())
  name String
  actions Action[]
}

model Trigger {
  id String @id @default(uuid())
  zapId String @unique
  zap Zap @relation("triggerIdfield",fields: [zapId], references: [id])
  triggerId String
  Type AvailableTrigger @relation(fields: [triggerId], references: [id])
}

model AvailableTrigger {
  id    String @id @default(uuid())
  name String
  triggers Trigger[]
}

model zapExecution {
  id String @id @default(uuid())
  zapId String 
  metadata Json
  zap Zap @relation(fields: [zapId], references: [id])   
  zapExecutionLogs zapExecutionLog?      
}

model zapExecutionLog {
  id String @id @default(uuid())
  zapExecutionId String @unique
  zapExecution zapExecution @relation(fields: [zapExecutionId], references: [id])
}